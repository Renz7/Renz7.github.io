<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Capriccio on Ren7&#39;s daily note.</title>
    <link>https://renz7.github.io/categories/capriccio/</link>
    <description>Recent content in Capriccio on Ren7&#39;s daily note.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 17 Dec 2023 02:29:38 +0000</lastBuildDate>
    <atom:link href="https://renz7.github.io/categories/capriccio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>runc 的一段代码</title>
      <link>https://renz7.github.io/post/runc-s-code-ztbxy.html</link>
      <pubDate>Sat, 16 Dec 2023 22:31:15 +0000</pubDate>
      <guid>https://renz7.github.io/post/runc-s-code-ztbxy.html</guid>
      <description>runc 的一段代码 github源码 // CreateCgroupPath creates cgroupv2 path, enabling all the supported controllers. func CreateCgroupPath(path string, c *configs.Cgroup) (Err error) { if !strings.HasPrefix(path, UnifiedMountpoint) { return fmt.Errorf(&amp;#34;invalid cgroup path %s&amp;#34;, path) } content, err := supportedControllers() if err != nil { return err } const ( cgTypeFile = &amp;#34;cgroup.type&amp;#34; cgStCtlFile = &amp;#34;cgroup.subtree_control&amp;#34; ) ctrs := strings.Fields(content) res := &amp;#34;+&amp;#34;</description>
    </item>
  </channel>
</rss>
